<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>新年快乐</title>
      <link href="/2023/01/01/4/"/>
      <url>/2023/01/01/4/</url>
      
        <content type="html"><![CDATA[<p>file:&#x2F;&#x2F;&#x2F;C:&#x2F;Users&#x2F;www&#x2F;Desktop&#x2F;%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%20(2)&#x2F;index.html</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人博客的坎坷之路</title>
      <link href="/2022/12/27/3/"/>
      <url>/2022/12/27/3/</url>
      
        <content type="html"><![CDATA[<p>这几天，通过从网上寻找各种搭建教程，不断尝试，再删除，再尝试，我终于战战兢兢的搭建了自己简陋的博客系统，这里放上网址，欢迎大家的访问哦</p><p><a href="https://cat711.github.io/">https://cat711.github.io/</a></p><h4 id="环境与工作准备"><a href="#环境与工作准备" class="headerlink" title="环境与工作准备"></a>环境与工作准备</h4><p>需要安装的程序（相信大家都有）</p><ul><li><p>Node</p><ul><li><p>下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p></li><li><p>打开CMD窗口，运行如下命令,修改npm源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Git</p></li><li><p>Hexo</p><ul><li><p>新建一个文件夹，在git bash执行命令安装hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>安装完后输入hexo -v验证是否安装成功，若出现版本号则表明安装成功</p></li></ul></li><li><p>github配置</p><ul><li><p>点击右上角的<code>+</code>按钮，选择<code>New repository</code>,创建一个<code>&lt;用户名&gt;.github.io</code>的仓库,选项同之前创建仓库相同</p></li><li><p>在git bash窗口<code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code>在C盘的用户文件夹下的.ssh文件夹，会看到id_rsa.pub</p></li><li><p>将公钥复制到github</p><ul><li><p>进入github，点击右上角头像 选择<code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到<code>Key</code>那一栏</p><p><img src="https://220678.oss-cn-qingdao.aliyuncs.com/Snipaste_2022-12-27_17-16-08.png"></p></li><li><p>测试连接，输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现连接到账户的信息，此时完成了环境准备工作</p></li></ul></li></ul></li></ul><h4 id="初始化Hexo项目"><a href="#初始化Hexo项目" class="headerlink" title="初始化Hexo项目"></a>初始化Hexo项目</h4><ol><li><p>在新建的文件夹的git bash下执行<code>hexo init blog-demo(项目名)</code>命令，进行<code>hexo init</code>初始化项目</p></li><li><p>进入<code>blog-demo</code> ，输入<code>npm i</code>安装相关依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog-demo  //进入blog-demo文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><ol start="3"><li>项目初始化后，博客的框架已经在文件夹中了</li><li>输入hexo server或hexo s启动项目</li><li>打开浏览器，输入地址<a href="http://localhost:4000/">http://localhost:4000/</a>   看到以下效果，说明博客已经初步搭建成功</li></ol></li></ol><p><img src="https://220678.oss-cn-qingdao.aliyuncs.com/Snipaste_2022-12-27_17-29-38.png"></p><h4 id="将静态博客挂载到github-page"><a href="#将静态博客挂载到github-page" class="headerlink" title="将静态博客挂载到github page"></a>将静态博客挂载到github page</h4><ol><li>安装hexo-deployer-git</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="2"><li>修改_config.yml文件</li></ol><p>在blog-demo目录下的_config.yml，修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:Fomalhaut-Blog/Fomalhaut-Blog.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><ol start="3"><li>修改好配置后。运行如下命令，将代码部署到github</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  // Git BASH终端</span><br><span class="line">hexo clean; hexo generate; hexo deploy  // VSCODE终端</span><br></pre></td></tr></table></figure><ul><li>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。</li><li>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</li><li>hexo deploy：部署文章，可以用<code>hexo d</code>缩写</li></ul><p>如果出现<code>Deploy done</code>，则说明部署成功了</p><p>此时，就可以打开浏览器访问<a href="https://fomalhaut-blog.github.io/">https:&#x2F;&#x2F;&lt;用户名&gt;.github.io</a>，这时就可以看到博客内容了</p><h4 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h4><p>在git bash窗口执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>安装成功之后可以在【C:&#x2F;Hexo-Blog&#x2F;blog-demo&#x2F;node_modules】文件夹下找到hexo-theme-butterfly文件夹</p><h4 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h4><ol><li>修改站点配置文件<code>_config.yml</code>，把主题改为<code>butterfly</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><ol start="2"><li>如果你没有<code>pug</code>以及<code>stylus</code>的渲染器，请下载安装，这两个渲染器是<code>Butterfly</code>生成基础页面所需的依赖包</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><ol start="3"><li>把主题文件夹中的 <code>_config.yml</code> 复制到 Hexo 根目录里，同时重新命名为 <code>_config.butterfly.yml</code>。以后只需要在 <code>_config.butterfly.yml</code>进行配置即可生效</li></ol><h4 id="基本用法说明"><a href="#基本用法说明" class="headerlink" title="基本用法说明"></a>基本用法说明</h4><ol><li><h5 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h5></li></ol><ul><li>Page Front-matter 用于页面配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">写法</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">【必需】页面标题</td></tr><tr><td align="center">date</td><td align="center">【必需】页面创建日期</td></tr><tr><td align="center">type</td><td align="center">【必需】标籤、分类和友情链接三个页面需要配置</td></tr></tbody></table><ul><li>Post Front-matter 用于文章页配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">写法</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">【必需】文章标题</td></tr><tr><td align="center">date</td><td align="center">【必需】文章创建日期</td></tr><tr><td align="center">updated</td><td align="center">【可选】文章更新日期</td></tr><tr><td align="center">tags</td><td align="center">【可选】文章标籤</td></tr></tbody></table><ol start="2"><li><h5 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h5></li></ol><ul><li><p>打开<code>Git Bash</code>执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure></li><li><p>在<code>[BlogRoot]\source\</code>会生成一个含有<code>index.md</code>文件的<code>tags</code>文件夹</p></li><li><p>修改<code>[BlogRoot]\source\tags\index.md</code>，添加<code>type: &quot;tags&quot;</code></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2022-10-28 12:00:00</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ol start="3"><li><h5 id="网站资料"><a href="#网站资料" class="headerlink" title="网站资料"></a>网站资料</h5></li></ol><p>修改网站各种资料，例如标题、副标题和邮箱等个人资料，请修改站点配置文件<code>_config.yml</code></p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">网站标题</td></tr><tr><td align="center">subtitle</td><td align="center">描述</td></tr><tr><td align="center">description</td><td align="center">网站描述</td></tr><tr><td align="center">keywords</td><td align="center">网站的关键词。支持多个关键词</td></tr><tr><td align="center">author</td><td align="center">您的名字</td></tr><tr><td align="center">language</td><td align="center">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN。</td></tr><tr><td align="center">timezone</td><td align="center">网站时区。Hexo 默认使用您电脑的时区。请参考 时区列表 进行设置，如 America&#x2F;New_York, Japan, 和 UTC 。一般的，对于中国大陆地区可以使用 Asia&#x2F;Shanghai</td></tr></tbody></table><ol start="4"><li><h5 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h5></li></ol><p>修改主题配置文件<code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: / || fas fa-home</span><br><span class="line">  Archives: /archives/ || fas fa-archive</span><br><span class="line">  Tags: /tags/ || fas fa-tags</span><br><span class="line">  Categories: /categories/ || fas fa-folder-open</span><br><span class="line">  List||fas fa-list:</span><br><span class="line">    Music: /music/ || fas fa-music</span><br><span class="line">    Movie: /movies/ || fas fa-video</span><br><span class="line">  Link: /link/ || fas fa-link</span><br><span class="line">  About: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><p>必须是 <code>/xxx/</code>，后面<code>||</code>分开，然后写图标名，如果不想显示图标，图标名可不写</p><ol start="5"><li><h5 id="文章置顶与封面"><a href="#文章置顶与封面" class="headerlink" title="文章置顶与封面"></a>文章置顶与封面</h5></li></ol><ul><li><p>你可以直接在文章的<code>front-matter</code>区域里添加<code>sticky: 1</code>属性来把这篇文章置顶。数值越大，置顶的优先级越大</p></li><li><p>文章的markdown文档上，在<code>Front-matter</code>添加<code>cover</code>，并填上要显示的图片地址。如果不配置<code>cover</code>，可以设置显示默认的<code>cover</code>；如果不想在首页显示cover，可以设置为<code>false</code>。<br>修改主题配置文件<code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cover:</span><br><span class="line">  # 是否显示文章封面</span><br><span class="line">  index_enable: true</span><br><span class="line">  aside_enable: true</span><br><span class="line">  archives_enable: true</span><br><span class="line">  # 封面显示的位置</span><br><span class="line">  # 三个值可配置 left , right , both</span><br><span class="line">  position: both</span><br><span class="line">  # 当没有设置cover时，默认的封面显示</span><br><span class="line">  default_cover: </span><br></pre></td></tr></table></figure></li></ul><ol start="6"><li><h5 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h5></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  img: /assets/head.jpg</span><br><span class="line">  effect: false # true则会一直转圈</span><br></pre></td></tr></table></figure><ol start="7"><li><h5 id="网站背景"><a href="#网站背景" class="headerlink" title="网站背景"></a>网站背景</h5></li></ol><p>修改主题配置文件<code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 图片格式 url(http://xxxxxx.com/xxx.jpg)</span><br><span class="line"># 颜色（HEX值/RGB值/颜色单词/渐变色)</span><br><span class="line"># 留空 不显示背景</span><br><span class="line">background: url(https://source.fomal.cc/img/dm1.webp)</span><br></pre></td></tr></table></figure><ol start="8"><li><h5 id="副标题设置"><a href="#副标题设置" class="headerlink" title="副标题设置"></a>副标题设置</h5></li></ol><p>可设置主页中显示的网站副标题或者喜欢的座右铭。</p><p>修改主题配置文件<code>_config.butterfly.yml</code>中的<code>subtitle</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># the subtitle on homepage (主頁subtitle)</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # Typewriter Effect (打字效果)</span><br><span class="line">  effect: true</span><br><span class="line">  # loop (循環打字)</span><br><span class="line">  loop: true</span><br><span class="line">  # source 調用第三方服務</span><br><span class="line">  # source: false 關閉調用</span><br><span class="line">  # source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span><br><span class="line">  # source: 2  調用一句網（簡體） http://yijuzhan.com/</span><br><span class="line">  # source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span><br><span class="line">  # subtitle 會先顯示 source , 再顯示 sub 的內容</span><br><span class="line">  source: false</span><br><span class="line">  # 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span><br><span class="line">  sub:</span><br><span class="line">    - &quot;Welcome to ...&quot;</span><br><span class="line">    - &quot;Hope you have a nice day&quot;</span><br></pre></td></tr></table></figure><h4 id="一些问题的解决"><a href="#一些问题的解决" class="headerlink" title="一些问题的解决"></a>一些问题的解决</h4><h6 id="1-端口问题"><a href="#1-端口问题" class="headerlink" title="1.端口问题"></a>1.端口问题</h6><p>多次调试hexo时可能会多次开关端口，可能会出现端口以被占用的问题</p><p>此时，先用管理员身份打开命令窗口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -o -n -a | findstr :4000</span><br></pre></td></tr></table></figure><p>查看4000端口的详细情况</p><p><img src="https://220678.oss-cn-qingdao.aliyuncs.com/Snipaste_2022-12-27_18-24-17.png"></p><p>将4000端口的进程结束掉</p><p>使用如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill /F /PID 3628</span><br></pre></td></tr></table></figure><p>这样就可以结束掉端口，然后重新接入端口</p><h6 id="2-依赖包问题"><a href="#2-依赖包问题" class="headerlink" title="2.依赖包问题"></a>2.依赖包问题</h6><p>git bash命令如果执行不理想的话。可以在终端运行，也可以在vscode上的终端运行，更快捷</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客技术来源</title>
      <link href="/2022/12/27/2/"/>
      <url>/2022/12/27/2/</url>
      
        <content type="html"><![CDATA[<div align=center class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=474023258&&page=1&as_wide=1&high_quality=1&danmaku=0"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记</title>
      <link href="/2022/12/26/JavaScript%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2022/12/26/JavaScript%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScript学习总结"><a href="#JavaScript学习总结" class="headerlink" title="JavaScript学习总结"></a>JavaScript学习总结</h2><h3 id="基本概念及作用"><a href="#基本概念及作用" class="headerlink" title="基本概念及作用"></a>基本概念及作用</h3><ul><li>概念：JavaScript 是一种解释性脚本语言，是可插入 HTML 页面的编程代码，可由所有的现代浏览器执行</li><li>作用：<ul><li>表单动态校验（密码强度检测）(S产生最初的目的)</li><li>网页特效</li><li>服务端开发(Node.js)</li><li>桌面程序(Electron)</li><li>App(Cordova)</li><li>控制硬件-物联网</li><li>游戏开发</li></ul></li><li>HTML&#x2F;CSS&#x2F;JS的关系<ul><li>HTML决定网页结构和内容（决定看到什么）</li><li>CSS决定网页呈现给用户的模样(决定好不好看)</li><li>实现业务逻辑和页面控制（决定功能）</li></ul></li></ul><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><h4 id="1-内嵌JavaScript"><a href="#1-内嵌JavaScript" class="headerlink" title="1.  内嵌JavaScript"></a>1.  内嵌JavaScript</h4><ul><li>放在<code>&lt;script&gt;&lt;/script&gt;</code>双标签中，<code>&lt;script&gt;</code>标签可以放在<code>&lt;head&gt;</code>中，也可以放在<code>&lt;body&gt;</code>中，放在最后也可以</li></ul><h4 id="2-外部JavaScript文件"><a href="#2-外部JavaScript文件" class="headerlink" title="2. 外部JavaScript文件"></a>2. 外部JavaScript文件</h4><ul><li><p>可以把脚本保存到外部文件中。外部文件通常包含被多个网页使用的代码。外部 JavaScript 文件的文件扩展名是 .js</p></li><li><p>当我们使用外部文件时，在HTML页面的script 标签的 “src” 属性中设置该 .js 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/myScript.js&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>适合于JS代码量比较的的情况</p><p><strong>外部脚本不能包含<code>script</code>标签</strong></p></li></ul><h4 id="3-行内式JavaScript"><a href="#3-行内式JavaScript" class="headerlink" title="3. 行内式JavaScript"></a>3. 行内式JavaScript</h4><ul><li>直接编写在HTML标签的一些属性中，用于简单的JavaScript代码的编写，用的偏少</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;ok&#x27;)&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript输入输出语句"><a href="#JavaScript输入输出语句" class="headerlink" title="JavaScript输入输出语句"></a>JavaScript输入输出语句</h3><table><thead><tr><th align="center">方法</th><th align="center">说明</th><th align="center">归属</th></tr></thead><tbody><tr><td align="center">alert(msg)</td><td align="center">浏览器弹出&#x3D;&#x3D;警示框&#x3D;&#x3D;</td><td align="center">浏览器</td></tr><tr><td align="center">console.log(msg)</td><td align="center">浏览器&#x3D;&#x3D;控制台&#x3D;&#x3D;打印输出信息</td><td align="center">浏览器</td></tr><tr><td align="center">prompt(info)</td><td align="center">浏览器弹出&#x3D;&#x3D;输入框&#x3D;&#x3D;，用户可以输入</td><td align="center">浏览器</td></tr></tbody></table><h3 id="JavaScript基本语法"><a href="#JavaScript基本语法" class="headerlink" title="JavaScript基本语法"></a>JavaScript基本语法</h3><h4 id="1-变量"><a href="#1-变量" class="headerlink" title="1. 变量"></a>1. 变量</h4><ul><li><h5 id="声明变量"><a href="#声明变量" class="headerlink" title="声明变量"></a>声明变量</h5><ul><li><p>声明变量的关键字：var</p><p>var是一个JS关键字，用来声明变量(variable变量的意思)。使用该关键字声明变量后，计算机会自动为变量分配内存空间</p></li><li><p>用法：语法:var 变量名称;</p></li></ul></li><li><p><strong>赋值</strong>  用&#x3D;来把右边的值赋给左边的变量空间中</p></li><li><h5 id="变量的命名规则"><a href="#变量的命名规则" class="headerlink" title="变量的命名规则"></a>变量的命名规则</h5><ul><li>由字母(A-Z-z)、数字0-9)、下划线()、美元符号($)组成</li><li>严格区分大小写。var app;和var App;是两个变量</li><li>不能以数字开头</li><li>不能是关键字、保留字</li><li>变量名必须有意义</li><li>遵守驼峰命名法。首字母小写，后面单词的首字母需要大写</li></ul></li><li><h5 id="变量的数据类型"><a href="#变量的数据类型" class="headerlink" title="变量的数据类型"></a>变量的数据类型</h5><ul><li>变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中</li><li>JavaScript是一种弱类型或者说动态语言，不用提前声明变量的类型，在程序运行过程中，类型会<br>被自动确定</li><li>在代码运行时，变量的数据类型是由S引擎根据&#x3D;右边变量值的数据类型来判断的，运行完毕之后，变量就确定了数据类型。</li></ul></li></ul><h4 id="2-语句"><a href="#2-语句" class="headerlink" title="2. 语句"></a>2. 语句</h4><ul><li>一般一行只写一条语句，每句结尾编写分号结束</li><li>运算符的两边以及括号的两边要空开一个位置</li></ul><h3 id="JavaScript的简单数据类型"><a href="#JavaScript的简单数据类型" class="headerlink" title="JavaScript的简单数据类型"></a>JavaScript的简单数据类型</h3><table><thead><tr><th align="center">简单数据类型</th><th align="center">说明</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">Number</td><td align="center">数字型，包含整型值和浮点型值，如21、0.21</td><td align="center">0</td></tr><tr><td align="center">Boolean</td><td align="center">布尔值类型，如true、false,等价于1和0</td><td align="center">false</td></tr><tr><td align="center">String</td><td align="center">字符串类型,字符串可以是引号中的任意文本。必须使用单引号或双引号</td><td align="center">“ “</td></tr><tr><td align="center">Undefined</td><td align="center">var a;声明了变量a但是没有给值，此时a&#x3D;undefined</td><td align="center">undefined</td></tr><tr><td align="center">Null</td><td align="center">var a&#x3D;null;声明了变量a为空值</td><td align="center">null</td></tr></tbody></table><h4 id="1-数值型三个特殊值"><a href="#1-数值型三个特殊值" class="headerlink" title="1. 数值型三个特殊值"></a>1. 数值型三个特殊值</h4><ul><li><p>Infinity,代表无穷大，大于任何数值</p></li><li><p>-Infinity,代表无穷小，小于任何数值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="title class_">Infinity</span>);   <span class="comment">//Infinity</span></span><br><span class="line"><span class="title function_">alert</span>(-<span class="title class_">Inifinity</span>); <span class="comment">//-Infinity</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="title class_">NaN</span>);        <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>NaN ,Not a number,代表一个非数值</p><ul><li><p>**isNaN()**用来判断一个变量是否为非数字的类型</p><p><code>isNaN(x)</code>若x是数字，返回false,若x不是数字，则返回true</p></li></ul></li></ul><h4 id="2-Boolean布尔值类型"><a href="#2-Boolean布尔值类型" class="headerlink" title="2. Boolean布尔值类型"></a>2. Boolean布尔值类型</h4><ul><li><p>布尔型和数字型相加的时候，true的值为1，false的值为0</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">true</span> +<span class="number">1</span>);   <span class="comment">//2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">false</span> +<span class="number">1</span>);  <span class="comment">//1</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-String字符串型"><a href="#3-String字符串型" class="headerlink" title="3. String字符串型"></a>3. String字符串型</h4><ul><li><h5 id="字符串转义符"><a href="#字符串转义符" class="headerlink" title="字符串转义符"></a>字符串转义符</h5></li></ul><table><thead><tr><th align="center">转义符</th><th align="center">解释说明</th></tr></thead><tbody><tr><td align="center">\n</td><td align="center">换行符</td></tr><tr><td align="center">\</td><td align="center">斜杠\</td></tr><tr><td align="center">\‘</td><td align="center">‘单引号</td></tr><tr><td align="center">\&#39;‘</td><td align="center">‘’双引号</td></tr><tr><td align="center">\t</td><td align="center">tab缩进</td></tr><tr><td align="center">\b</td><td align="center">空格</td></tr></tbody></table><ul><li><h5 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h5><ul><li><p>字符串是由若干字符组成的，这些字符的数量就是字符串的长度</p></li><li><p>通过字符串的&#x3D;&#x3D;length&#x3D;&#x3D;属性可以获取整个字符串的长度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(str.<span class="property">length</span>);  <span class="comment">//显示str字符串的长度</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h5><ul><li><p>多个字符串之间可以使用+进行拼接，其拼接方式为&#x3D;&#x3D;字符串+任何类型&#x3D;拼接之后的新字符串&#x3D;&#x3D;</p></li><li><p>拼接前会把&#x3D;&#x3D;与字符串相加&#x3D;&#x3D;的&#x3D;&#x3D;任何类型&#x3D;&#x3D;转成&#x3D;&#x3D;字符串&#x3D;&#x3D;，再拼接成一个新的字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串“相加”</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>+<span class="string">&#x27;&#x27;</span>+<span class="string">&#x27;world&#x27;</span>);  <span class="comment">//hello world</span></span><br><span class="line"><span class="comment">//数值与字符串“相加”</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;100&#x27;</span>+<span class="string">&#x27;100&#x27;</span>);  <span class="comment">//100100</span></span><br><span class="line"><span class="comment">//数值字符串+数值</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;11&#x27;</span>+<span class="number">12</span>);  <span class="comment">//1112</span></span><br></pre></td></tr></table></figure></li><li><p>通常将字符串和变量来拼接，因为变量可以很方便的修改里面的值，&#x3D;&#x3D;变量是不能添加引号的&#x3D;&#x3D;，因为加引号的变量会变成字符串</p></li></ul></li></ul><h4 id="4-Undefined"><a href="#4-Undefined" class="headerlink" title="4. Undefined"></a>4. Undefined</h4><ul><li><p>一个声明后没有被赋值的变量会有一个默认值undefined(如果进行相连或者相加时，注意结果)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> variable;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(variable);        <span class="comment">//undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好&#x27;</span> + variable)； <span class="comment">//你好undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">11</span> + variable);     <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>会出现undefined的值的情况</p><ul><li><p>变量声明且没有赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj; </span><br><span class="line"><span class="title function_">alert</span>(obj);<span class="comment">//obj值为undefined</span></span><br></pre></td></tr></table></figure></li><li><p>获取对象中不存在的属性时</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj;</span><br><span class="line"><span class="title function_">alert</span>(obj.<span class="property">name</span>);<span class="comment">//报错信息: &quot;Uncaught TypeError: Cannot read property &#x27;name&#x27; of undefined&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>函数需要实参，但是调用时没有传值，形参是undefined</p></li><li><p>函数调用没有返回值或者return后没有数据，接收函数返回的变量是undefined</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">printNum</span>(<span class="params">num</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> result=<span class="title function_">printNum</span>();<span class="comment">//调用函数未传递参数，执行函数的时候num的值是undefined alert(result);</span></span><br><span class="line"><span class="comment">//result的值也是undefined，因为printNum()没有返回值</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="5-Null"><a href="#5-Null" class="headerlink" title="5. Null"></a>5. Null</h4><ul><li><p>一个声明变量给null值，里面存的值为空</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vari = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好&#x27;</span> + vari);   <span class="comment">//你好null</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">11</span> + vari);      <span class="comment">//11</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">true</span> + vari);    <span class="comment">//1</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="6-查询变量类型"><a href="#6-查询变量类型" class="headerlink" title="6. 查询变量类型"></a>6. 查询变量类型</h4><p><code>typeof</code> + 变量名</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> num);   <span class="comment">//number</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> str);   <span class="comment">//string</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> flag);  <span class="comment">//boolean</span></span><br><span class="line"><span class="keyword">var</span> vari = <span class="literal">undefined</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> vari);  <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> timer); <span class="comment">//object</span></span><br></pre></td></tr></table></figure><h4 id="7-数据类型转换"><a href="#7-数据类型转换" class="headerlink" title="7. 数据类型转换"></a>7. 数据类型转换</h4><p>使用表单、prompt获取过来的数据默认是字符串类型的，此时就不能直接简单的进行加法运算，而需要转换变量的数据类型。通俗来说，就是把一种数据类型的变量转换成另外一种数据类型。</p><p>通常会实现3种方式的转换：</p><h5 id="1-转换为字符串类型"><a href="#1-转换为字符串类型" class="headerlink" title="1. 转换为字符串类型"></a>1. 转换为字符串类型</h5><table><thead><tr><th align="center">方式</th><th align="center">说明</th><th align="center">案例</th></tr></thead><tbody><tr><td align="center">toString()</td><td align="center">转换成字符串</td><td align="center">var num &#x3D;1; alert(num.toString());</td></tr><tr><td align="center">String()强制转换</td><td align="center">转换成字符串</td><td align="center">var num &#x3D; 1; alert(String(num));</td></tr><tr><td align="center"><strong>加号拼接字符串</strong></td><td align="center">和字符串拼接的结果都是字符串</td><td align="center">var num &#x3D;1; alert(num+” “)</td></tr></tbody></table><h5 id="2-x3D-x3D-转换为数字型-x3D-x3D"><a href="#2-x3D-x3D-转换为数字型-x3D-x3D" class="headerlink" title="2. &#x3D;&#x3D;转换为数字型&#x3D;&#x3D;"></a>2. &#x3D;&#x3D;转换为数字型&#x3D;&#x3D;</h5><table><thead><tr><th align="center">方式</th><th align="center">说明</th><th align="center">案例</th></tr></thead><tbody><tr><td align="center">parseInt(string)函数</td><td align="center">将string类型转成整数数值型</td><td align="center">parseInt(‘78’)</td></tr><tr><td align="center">parseFloat(string)函数</td><td align="center">将string类型转成浮点数值型</td><td align="center">parseFloat(‘78.21’)</td></tr><tr><td align="center">Number()强制转换函数</td><td align="center">将string类型转换成数值型</td><td align="center">Number(‘12’)</td></tr><tr><td align="center">js隐式转换（- * &#x2F;)</td><td align="center">l利用算术运算符隐式转换为数值型</td><td align="center">‘12’-0</td></tr></tbody></table><h5 id="3-转换为布尔型"><a href="#3-转换为布尔型" class="headerlink" title="3. 转换为布尔型"></a>3. 转换为布尔型</h5><table><thead><tr><th>方式</th><th>说明</th><th>案例</th></tr></thead><tbody><tr><td>Boolean()函数</td><td>其他类型转成布尔值</td><td>Boolean(‘true’);</td></tr></tbody></table><p>代表空、否定的值会被转换为false,如”、0、NaN、null、undefined,其余值都会被转换为true</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="string">&#x27; &#x27;</span>));         <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="number">0</span>));           <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="title class_">NaN</span>));         <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="literal">null</span>));        <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="literal">undefined</span>));   <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="string">&#x27;小白&#x27;</span>));       <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="number">12</span>));          <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h4 id="8-JavaScript中数值的最大和最小值"><a href="#8-JavaScript中数值的最大和最小值" class="headerlink" title="8. JavaScript中数值的最大和最小值"></a>8. JavaScript中数值的最大和最小值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">a1ert</span>(<span class="title class_">Number</span>.<span class="property">MAX_VALUE</span>);<span class="comment">//1.7976931348623157e+308</span></span><br><span class="line">alert (<span class="title class_">Number</span>.<span class="property">MIN_VALUE</span>);<span class="comment">//5e-324</span></span><br></pre></td></tr></table></figure><h3 id="标识符、关键字和保留字"><a href="#标识符、关键字和保留字" class="headerlink" title="标识符、关键字和保留字"></a>标识符、关键字和保留字</h3><h4 id="1-标识符"><a href="#1-标识符" class="headerlink" title="1. 标识符"></a>1. 标识符</h4><p>就是指开发人员为变量、属性、函数、参数取的名字</p><p><strong>标识符不能是关键字或保留字</strong></p><h4 id="2-关键字"><a href="#2-关键字" class="headerlink" title="2. 关键字"></a>2. 关键字</h4><p>是指S本身已经使用了的字，不能再用它们充当变量名、方法名。包括：break、case、catch、continue、default、delete、do、else、finally、for、function、if、in、<br>instanceof、new、return、switch、this、throw、try、typeof、var、void、while、with等。</p><h4 id="3-保留字"><a href="#3-保留字" class="headerlink" title="3.保留字"></a>3.保留字</h4><p>实际上就是预留的“关键字”，意思是现在虽然还不是关键字，但是未来可能会成为关键字，同样不能使用它们当变量名或方法名。包括：boolean、char、class、double、float、goto、long、static、enum等</p><h3 id="JavaScript中的运算符"><a href="#JavaScript中的运算符" class="headerlink" title="JavaScript中的运算符"></a>JavaScript中的运算符</h3><h4 id="1-运算符总结"><a href="#1-运算符总结" class="headerlink" title="1. 运算符总结"></a>1. 运算符总结</h4><table><thead><tr><th align="center">运算符类型</th><th align="center">符号</th><th>备注</th></tr></thead><tbody><tr><td align="center">算数运算符</td><td align="center">+ - * &#x2F; %</td><td></td></tr><tr><td align="center">赋值运算符</td><td align="center">+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</td><td></td></tr><tr><td align="center">字符串的连接符</td><td align="center">+</td><td></td></tr><tr><td align="center">逻辑运算符</td><td align="center">&amp;&amp;、||、!</td><td>1. &amp;&amp;<br/>当有多个表达式（值）时，左边的表达式值可以确定结果时，就不再继续运算右边的表达式<br/>语法：表达式1&amp;&amp;表达式2<br/>如果第一个表达式的值为真，则返回表达式2<br/>如果第一个表达式的值为假，则返回表达式1<br/>2. ||<br/>如果第一个表达式的值为真，则返回表达式1<br/>如果第一个表达式的值为假，则返回表达式2</td></tr><tr><td align="center">条件运算符</td><td align="center">?:</td><td>判断语句？ 表达式1：表达式2<br/>若判断结果为真，着执行表达式1；若判断结果为假，则执行表达式2</td></tr><tr><td align="center">比较运算符</td><td align="center">&#x3D;&#x3D; (会转型)、!&#x3D;、&gt;&#x3D;、&lt;&#x3D;、&lt;、&gt;、&#x3D;&#x3D;&#x3D; 、! &#x3D;&#x3D;(全等，要求值和类型都一致)</td><td>比较运算符（关系运算符）是两个数据进行比较时所使用的运算符，比较运算后，会返回一个布尔值(true&#x2F;false)作为比较运算的结果</td></tr><tr><td align="center">递增递减运算符</td><td align="center">++ –</td><td>自增自减运算符，常用在循环语句中</td></tr></tbody></table><h4 id="2-运算符优先级"><a href="#2-运算符优先级" class="headerlink" title="2.运算符优先级"></a>2.运算符优先级</h4><table><thead><tr><th>优先级</th><th>运算符</th><th>顺序</th></tr></thead><tbody><tr><td>1</td><td>小括号</td><td>（）</td></tr><tr><td>2</td><td>一元运算符</td><td>++ – &#x3D;&#x3D;<strong>!</strong>&#x3D;&#x3D;</td></tr><tr><td>3</td><td>算数运算符</td><td>先*&#x2F;后+-</td></tr><tr><td>4</td><td>关系运算符</td><td>&gt; &gt;&#x3D; &lt; &lt;&#x3D;</td></tr><tr><td>5</td><td>相等运算符</td><td>&#x3D;&#x3D; !&#x3D; &#x3D;&#x3D;&#x3D; ! &#x3D;&#x3D;</td></tr><tr><td>6</td><td>逻辑运算符</td><td>先&amp;&amp;后||</td></tr><tr><td>7</td><td>赋值运算符</td><td>&#x3D;</td></tr><tr><td>8</td><td>逗号运算符</td><td>，</td></tr></tbody></table><p><strong>一元运算符里面的逻辑非的优先级很高</strong></p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="1-创建数组"><a href="#1-创建数组" class="headerlink" title="1. 创建数组"></a>1. 创建数组</h4><ul><li><p>利用new创建数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();   <span class="comment">//创建了一个空的数组</span></span><br></pre></td></tr></table></figure></li><li><p>利用数组字面量创建数组</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;www&#x27;</span>,<span class="literal">true</span>];</span><br></pre></td></tr></table></figure><h4 id="2-获取数组元素"><a href="#2-获取数组元素" class="headerlink" title="2. 获取数组元素"></a>2. 获取数组元素</h4><p>通过数组名[索引]的形式获取数组中的元素</p><h4 id="3-新增数组元素"><a href="#3-新增数组元素" class="headerlink" title="3.新增数组元素"></a>3.新增数组元素</h4><ul><li><p>修改length长度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">length</span>);</span><br><span class="line">arr.<span class="property">length</span> = <span class="number">5</span>;</span><br><span class="line">consloe.<span class="title function_">log</span>(arr[<span class="number">3</span>]);   <span class="comment">//undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">4</span>]);   <span class="comment">//undefined</span></span><br></pre></td></tr></table></figure></li><li><p>修改索引号</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>];</span><br><span class="line">arr1[<span class="number">3</span>] = <span class="string">&#x27;black&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<!-- GitCalendar容器 --><div id="gitZone"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;}#page-header {    background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {    background: transparent !important;}#page-header::before {    background: transparent !important;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {    background: transparent !important;}[data-theme="dark"] #page-header::before {    background: transparent !important;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content>.card-widget.card-info {    background: linear-gradient(-45deg,            #e8d8b9,            #eccec5,            #a3e9eb,            #bdbdf0,            #eec1ea);    box-shadow: 0 0 5px rgb(66, 68, 68);    position: relative;    background-size: 400% 400%;    -webkit-animation: Gradient 10s ease infinite;    -moz-animation: Gradient 10s ease infinite;    animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@-moz-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content>.card-widget.card-info {    background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content>.card-widget.card-info>#card-info-btn {    background-color: #3eb8be;    border-radius: 8px;}/*哔哩哔哩视频适配*/.aspect-ratio {    position: relative;    width: 90%;    height: auto;    padding-bottom: 75%;    margin: 3% auto;    text-align: center;  }  .aspect-ratio iframe {    position: absolute;    width: 100%;    height: 86%;    left: 0;    top: 0;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index-1.html"/>
      <url>/tags/index-1.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
